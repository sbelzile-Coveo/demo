{"version":3,"sources":["webpack:///./src/utils/SVGDom.ts?f8cf*************","./src/ui/CardOverlay/CardOverlay.ts","./sass/_CardOverlay.scss","./src/events/CardOverlayEvents.ts"],"names":[],"mappings":";;;;;;;;AAEA;IAAA;IAgBA,CAAC;IAde,+BAAwB,GAAtC,UAAuC,YAAyB,EAAE,UAAkB;QAClF,IAAM,UAAU,GAAG,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACrD,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,KAAG,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,UAAY,CAAC,CAAC;IAClF,CAAC;IAEa,oCAA6B,GAA3C,UAA4C,YAAyB,EAAE,aAAqB;QAC1F,IAAM,UAAU,GAAG,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACrD,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3F,CAAC;IAEc,eAAQ,GAAvB,UAAwB,UAAsB;QAC5C,IAAM,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACnD,MAAM,CAAC,SAAS,GAAG,SAAS,GAAG,GAAG,GAAG,EAAE,CAAC;IAC1C,CAAC;IACH,aAAC;AAAD,CAAC;AAhBY,wBAAM;;;;;;;;;;;;;;;;;;;;;ACFnB,yCAA8C;AAC9C,gDAA4D;AAE5D,8CAAwD;AACxD,mDAAmE;AACnE,mCAAqC;AACrC,sCAA2C;AAC3C,8CAAoE;AACpE,6CAAqD;AACrD,yBAA8B;AAC9B,yCAAgD;AAChD,uCAA4C;AAC5C,qCAA0C;AAO1C;;;;;;;;;;GAUG;AACH;IAAiC,+BAAS;IAgCxC;;;;;;OAMG;IACH,qBAAmB,OAAoB,EAAS,OAA6B,EAAE,QAA6B;QAA5G,YACE,kBAAM,OAAO,EAAE,WAAW,CAAC,EAAE,EAAE,QAAQ,CAAC,SASzC;QAVkB,aAAO,GAAP,OAAO,CAAa;QAAS,aAAO,GAAP,OAAO,CAAsB;QAE3E,KAAI,CAAC,OAAO,GAAG,mCAAgB,CAAC,oBAAoB,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;QAEpF,KAAI,CAAC,UAAU,GAAG,QAAE,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC3D,eAAM,CAAC,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,QAAE,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;QACxD,KAAI,CAAC,aAAa,EAAE,CAAC;QACrB,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QAChC,KAAI,CAAC,YAAY,EAAE,CAAC;;IACtB,CAAC;IAED;;;;;OAKG;IACI,mCAAa,GAApB,UAAqB,KAAe;QAClC,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACxB,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACnD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,QAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;;OAIG;IACI,iCAAW,GAAlB;QACE,QAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,0BAA0B,CAAC,CAAC;QACzD,QAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC1C,QAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,qCAAiB,CAAC,eAAe,CAAC,CAAC;IACrE,CAAC;IAED;;;;OAIG;IACI,kCAAY,GAAnB;QACE,QAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;QACtD,QAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC7C,QAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,2BAA2B,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,qCAAiB,CAAC,gBAAgB,CAAC,CAAC;IACtE,CAAC;IAEO,mCAAa,GAArB;QAAA,iBA0BC;QAzBC,IAAI,CAAC,OAAO,GAAG,QAAE,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,oBAAoB,EAAE,CAAC,CAAC,EAAE,CAAC;QAEjE,gBAAgB;QAChB,IAAI,aAAa,GAAG,QAAE,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,2BAA2B,EAAE,CAAC,CAAC,EAAE,CAAC;QAC7E,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAExC,cAAc;QACd,IAAI,WAAW,GAAG,QAAE,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,yBAAyB,EAAE,CAAC,CAAC,EAAE,CAAC;QACzE,oDAAoD;QACpD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC1C,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACnD,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAEtC,gBAAgB;QAChB,IAAM,IAAI,GAAG,QAAE,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,oCAAoC,EAAE,EAAE,mBAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACvG,eAAM,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE,6BAA6B,CAAC,CAAC;QACxE,IAAI,aAAa,GAAG,QAAE,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,2BAA2B,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QAClG,aAAa,CAAC,EAAE,CAAC,OAAO,EAAE,cAAM,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,EAAE,6BAAa,CAAC,cAAc,CAAC,wBAAQ,CAAC,KAAK,EAAE,cAAM,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC,CAAC;QAEvH,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAE3C,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAEO,kCAAY,GAApB,UAAqB,OAAoB;QAAzC,iBAWC;QAVC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACtB,IAAM,IAAI,GAAG,QAAE,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,EAAE,mBAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5F,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC1B,eAAM,CAAC,wBAAwB,CAAC,OAAO,EAAE,WAAS,aAAK,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAM,CAAC,CAAC;QAC/F,CAAC;QACD,OAAO,CAAC,WAAW,CAAC,QAAE,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QACrF,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QACtC,QAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,cAAM,YAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,6BAAa,CAAC,cAAc,CAAC,wBAAQ,CAAC,KAAK,EAAE,cAAM,YAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,CAAC,CAAC,CAAC;IAE3G,CAAC;IACH,kBAAC;AAAD,CAAC,CArIgC,qBAAS;AACjC,cAAE,GAAG,aAAa,CAAC;AAEnB,oBAAQ,GAAG;IAChB,8BAAc,CAAC;QACb,aAAa,EAAE,WAAW;KAC3B,CAAC,CAAC;AACL,CAAC;AAKD;;GAEG;AACI,mBAAO,GAAwB;IAEpC;;;;OAIG;IACH,KAAK,EAAE,mCAAgB,CAAC,0BAA0B,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC;IAE/F;;;;OAIG;IACH,IAAI,EAAE,mCAAgB,CAAC,eAAe,EAAE;CACzC,CAAC;AA9BS,kCAAW;AAuIxB,+BAAc,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;;;;;;;;ACrKxD,yC;;;;;;;;;;ACAA;;GAEG;AACH;IAAA;IAeA,CAAC;IAAD,wBAAC;AAAD,CAAC;AAbC;;;;GAIG;AACW,iCAAe,GAAG,iBAAiB,CAAC;AAElD;;;;GAIG;AACW,kCAAgB,GAAG,kBAAkB,CAAC;AAdzC,8CAAiB","file":"CardOverlay.js","sourcesContent":["import { $$ } from './Dom';\n\nexport class SVGDom {\n\n  public static addClassToSVGInContainer(svgContainer: HTMLElement, classToAdd: string) {\n    const svgElement = svgContainer.querySelector('svg');\n    svgElement.setAttribute('class', `${SVGDom.getClass(svgElement)}${classToAdd}`);\n  }\n\n  public static removeClassFromSVGInContainer(svgContainer: HTMLElement, classToRemove: string) {\n    const svgElement = svgContainer.querySelector('svg');\n    svgElement.setAttribute('class', SVGDom.getClass(svgElement).replace(classToRemove, ''));\n  }\n\n  private static getClass(svgElement: SVGElement) {\n    const className = svgElement.getAttribute('class');\n    return className ? className + ' ' : '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/SVGDom.ts","import { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { Initialization } from '../Base/Initialization';\nimport { CardOverlayEvents } from '../../events/CardOverlayEvents';\nimport { $$ } from '../../utils/Dom';\nimport { Assert } from '../../misc/Assert';\nimport { KeyboardUtils, KEYBOARD } from '../../utils/KeyboardUtils';\nimport { exportGlobally } from '../../GlobalExports';\nimport 'styling/_CardOverlay';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { SVGDom } from '../../utils/SVGDom';\nimport { Utils } from '../../utils/Utils';\n\nexport interface ICardOverlayOptions {\n  title: string;\n  icon?: string;\n}\n\n/**\n * The CardOverlay component displays a button that the user can click to toggle the visibility of an overlay on top of\n * an {@link IQueryResult}. While this component typically populates a {@link CardActionBar} component, it is actually\n * possible to place a CardOverlay component anywhere in any result.\n *\n * The primary purpose of the CardOverlay component is to display additional information about a result in a format that\n * fits well within a card result layout (see [Result Layouts](https://developers.coveo.com/x/yQUvAg)).\n *\n * When initialized, this component creates a `<div class=\"coveo-card-overlay\">` element as the last child of its parent\n * IQueryResult, and displays a button which toggles the visibility of the overlay.\n */\nexport class CardOverlay extends Component {\n  static ID = 'CardOverlay';\n\n  static doExport = () => {\n    exportGlobally({\n      'CardOverlay': CardOverlay\n    });\n  }\n\n  private parentCard: HTMLElement;\n  private overlay: HTMLElement;\n\n  /**\n   * @componentOptions\n   */\n  static options: ICardOverlayOptions = {\n\n    /**\n     * Specifies the string to use for the overlay title and for the button text.\n     *\n     * Setting a value for this option is required for this component to work.\n     */\n    title: ComponentOptions.buildLocalizedStringOption({ required: true, defaultValue: 'NoTitle' }),\n\n    /**\n     * Specifies the icon to use for the overlay icon and for the button icon.\n     *\n     * The name of the icon to use should be specified in dashed case. ie: facet-expand\n     */\n    icon: ComponentOptions.buildIconOption()\n  };\n\n  /**\n   * Creates a new CardOverlay component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the CardOverlay component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(public element: HTMLElement, public options?: ICardOverlayOptions, bindings?: IComponentBindings) {\n    super(element, CardOverlay.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, CardOverlay, options);\n\n    this.parentCard = $$(this.element).closest('.CoveoResult');\n    Assert.exists(this.parentCard);\n    $$(this.parentCard).addClass('coveo-with-card-overlay');\n    this.createOverlay();\n    this.createButton(this.element);\n    this.closeOverlay();\n  }\n\n  /**\n   * Toggles the CardOverlay visibility.\n   *\n   * @param swtch Specifying a value for this parameter forces the component visibility to take the corresponding value\n   * (`true` for visible; `false` for hidden).\n   */\n  public toggleOverlay(swtch?: boolean) {\n    if (swtch !== undefined) {\n      swtch ? this.openOverlay() : this.closeOverlay();\n    } else {\n      if ($$(this.overlay).hasClass('coveo-opened')) {\n        this.closeOverlay();\n      } else {\n        this.openOverlay();\n      }\n    }\n  }\n\n  /**\n   * Opens the CardOverlay.\n   *\n   * Also triggers the {@link CardOverlayEvents.openCardOverlay} event.\n   */\n  public openOverlay() {\n    $$(this.overlay).removeClass('coveo-hidden-for-tab-nav');\n    $$(this.overlay).addClass('coveo-opened');\n    $$(this.parentCard).addClass('coveo-card-overlay-opened');\n    this.bind.trigger(this.element, CardOverlayEvents.openCardOverlay);\n  }\n\n  /**\n   * Closes the CardOverlay.\n   *\n   * Also triggers the {@link CardOverlayEvents.closeCardOverlay} event.\n   */\n  public closeOverlay() {\n    $$(this.overlay).addClass('coveo-hidden-for-tab-nav');\n    $$(this.overlay).removeClass('coveo-opened');\n    $$(this.parentCard).removeClass('coveo-card-overlay-opened');\n    this.bind.trigger(this.element, CardOverlayEvents.closeCardOverlay);\n  }\n\n  private createOverlay() {\n    this.overlay = $$('div', { className: 'coveo-card-overlay' }).el;\n\n    // Create header\n    let overlayHeader = $$('div', { className: 'coveo-card-overlay-header' }).el;\n    this.createButton(overlayHeader);\n    this.overlay.appendChild(overlayHeader);\n\n    // Create body\n    let overlayBody = $$('div', { className: 'coveo-card-overlay-body' }).el;\n    // Transfer all of element's children to the overlay\n    while (this.element.childNodes.length > 0) {\n      overlayBody.appendChild(this.element.firstChild);\n    }\n    this.overlay.appendChild(overlayBody);\n\n    // Create footer\n    const icon = $$('span', { className: 'coveo-icon coveo-open-card-overlay' }, SVGIcons.icons.arrowDown);\n    SVGDom.addClassToSVGInContainer(icon.el, 'coveo-open-card-overlay-svg');\n    let overlayFooter = $$('div', { className: 'coveo-card-overlay-footer', tabindex: '0' }, icon.el);\n    overlayFooter.on('click', () => this.toggleOverlay(false));\n    this.bind.on(overlayFooter.el, 'keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, () => this.toggleOverlay(false)));\n\n    this.overlay.appendChild(overlayFooter.el);\n\n    this.parentCard.appendChild(this.overlay);\n  }\n\n  private createButton(element: HTMLElement) {\n    if (this.options.icon) {\n      const icon = $$('span', { className: 'coveo-icon ' }, SVGIcons.icons[this.options.icon]).el;\n      element.appendChild(icon);\n      SVGDom.addClassToSVGInContainer(element, `coveo-${Utils.toDashCase(this.options.icon)}-svg`);\n    }\n    element.appendChild($$('span', { className: 'coveo-label' }, this.options.title).el);\n    element.setAttribute('tabindex', '0');\n    $$(element).on('click', () => this.toggleOverlay());\n    this.bind.on(element, 'keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, () => this.toggleOverlay()));\n\n  }\n}\n\nInitialization.registerAutoCreateComponent(CardOverlay);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/CardOverlay/CardOverlay.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_CardOverlay.scss\n// module id = 585\n// module chunks = 23 70","/**\n * The CardOverlayEvents class contains string definitions for all events related to the {@link CardOverlay} component.\n */\nexport class CardOverlayEvents {\n\n  /**\n   * Opening a {@link CardOverlay} component triggers this event (see {@link CardOverlay.openOverlay}).\n   *\n   * @type {string}\n   */\n  public static openCardOverlay = 'openCardOverlay';\n\n  /**\n   * Closing a {@link CardOverlay} component triggers this event (see {@link CardOverlay.closeOverlay}).\n   *\n   * @type {string}\n   */\n  public static closeCardOverlay = 'closeCardOverlay';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/CardOverlayEvents.ts"],"sourceRoot":""}