{"version":3,"sources":["./src/ui/Matrix/Matrix.ts","./sass/_Matrix.scss","./src/ui/Matrix/Cell.ts","./src/ui/Matrix/DefaultMatrixResultPreviewTemplate.ts"],"names":[],"mappings":"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","file":"Matrix.js","sourcesContent":["import { Template } from '../Templates/Template';\nimport { Component } from '../Base/Component';\nimport { ComponentOptions, IFieldOption } from '../Base/ComponentOptions';\nimport { Cell } from './Cell';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { DefaultMatrixResultPreviewTemplate } from './DefaultMatrixResultPreviewTemplate';\nimport { $$ } from '../../utils/Dom';\nimport { QueryEvents, IBuildingQueryEventArgs, IDoneBuildingQueryEventArgs, IQuerySuccessEventArgs } from '../../events/QueryEvents';\nimport { QueryStateModel } from '../../models/QueryStateModel';\nimport { QueryBuilder } from '../Base/QueryBuilder';\nimport { Utils } from '../../utils/Utils';\nimport { IGroupByRequest } from '../../rest/GroupByRequest';\nimport { IQueryResults } from '../../rest/QueryResults';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Initialization, IInitializationParameters } from '../Base/Initialization';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { IQuery } from '../../rest/Query';\nimport * as Globalize from 'globalize';\nimport * as _ from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\nimport 'styling/_Matrix';\n\nexport interface IMatrixOptions {\n  title?: string;\n\n  rowField: IFieldOption;\n  sortCriteria?: string;\n  maximumNumberOfRows?: number;\n  enableRowTotals?: boolean;\n\n  columnField: IFieldOption;\n  columnFieldValues?: string[];\n  columnLabels?: string[];\n  columnHeader?: string;\n  maximumNumberOfValuesInGroupBy?: number;\n  enableColumnTotals?: boolean;\n\n  computedField: IFieldOption;\n  computedFieldOperation?: string;\n  computedFieldFormat?: string;\n  cellFontSize?: string;\n\n  enableHoverPreview?: boolean;\n  previewSortCriteria?: string;\n  previewSortField?: IFieldOption;\n  previewMaxWidth?: string;\n  previewMinWidth?: string;\n  previewDelay?: number;\n  previewTemplate?: Template;\n}\n\n/**\n * The Matrix component uses the values of two fields (row and column) to display the results of the specified computed\n * field in a table.\n *\n * The user specifies the values to use for the columns. An {@link IGroupByRequest} operation performed at the same time\n * as the main query retrieves the values to use for the rows.\n *\n * In a way that is similar to the {@link Facet} component, selecting a Matrix cell allows the end user to drill down\n * inside the results by restricting the row field and the column field to match the values of the selected cell.\n */\nexport class Matrix extends Component {\n  static ID = 'Matrix';\n\n  static doExport = () => {\n    exportGlobally({\n      'Matrix': Matrix\n    });\n  }\n\n  /**\n   * The possible options for the component\n   * @componentOptions\n   */\n  static options: IMatrixOptions = {\n\n    /**\n     * Specifies the text to display at the top of the Matrix.\n     */\n    title: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies the field to use for the rows.\n     *\n     * Specifying a value for this options is required for this component to work.\n     */\n    rowField: ComponentOptions.buildFieldOption({ required: true }),\n\n    /**\n     * Specifies the field to use for the columns.\n     *\n     * Specifying a value for this options is required for this component to work.\n     */\n    columnField: ComponentOptions.buildFieldOption({ required: true }),\n\n    /**\n     * Specifies the criteria to use for sorting the rows.\n     *\n     * See {@link IGroupByRequest.sortCriteria} for the list of possible values.\n     *\n     * Default value is `ComputedFieldDescending`.\n     */\n    sortCriteria: ComponentOptions.buildStringOption({ defaultValue: 'ComputedFieldDescending' }),\n\n    /**\n     * Specifies the maximum number of rows to display in the Matrix.\n     *\n     * Default value is `10`. Minimum value is `0`.\n     */\n    maximumNumberOfRows: ComponentOptions.buildNumberOption({ defaultValue: 10, min: 0 }),\n\n    /**\n     * Specifies whether to display a **Total** column containing the sum of each row.\n     *\n     * Default value is `true`.\n     */\n    enableRowTotals: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies the field values to use for each column.\n     *\n     * See also {@link Matrix.options.columnLabels}.\n     *\n     * Default value is `[]`, which means that the Matrix will not generate any column (except the **Total** column, if\n     * {@link Matrix.options.enableRowTotals} is `true`).\n     */\n    columnFieldValues: ComponentOptions.buildListOption<string>({ defaultValue: [] }),\n\n    /**\n     * Specifies the label values to use for each column.\n     *\n     * Default value is `[]`. The array set for this options should match the {@link Matrix.options.columnFieldValues}.\n     */\n    columnLabels: ComponentOptions.buildListOption<string>({ defaultValue: [] }),\n\n    /**\n     * Specifies the label for the first column on the left as a description of the {@link Matrix.options.columnField}.\n     *\n     * Default value is `undefined`.\n     */\n    columnHeader: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies the maximum number of results to include in the {@link IGroupByRequest} for the columns.\n     *\n     * This value should always be greater than the {@link Matrix.options.maximumNumberOfRows}. If it is too small, some\n     * of the results will not be displayed in the Matrix.\n     *\n     * Default value is `100`. Minimum value is `0`.\n     */\n    maximumNumberOfValuesInGroupBy: ComponentOptions.buildNumberOption({ defaultValue: 100, min: 0 }),\n\n    /**\n     * Specifies whether to add a **Total** row containing the total of each column.\n     *\n     * Default value is `true`\n     */\n    enableColumnTotals: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies the field whose computed values you want to display in the cells.\n     *\n     * Specifying a value for this options is required for this component to work.\n     */\n    computedField: ComponentOptions.buildFieldOption({ required: true }),\n\n    /**\n     * Specifies the type of aggregate operation to perform on the {@link Matrix.options.computedField}.\n     *\n     * The possible values are:\n     * - `sum` - Computes the sum of the computed field values.\n     * - `average` - Computes the average of the computed field values.\n     * - `minimum` - Finds the minimum value of the computed field values.\n     * - `maximum` - Finds the maximum value of the computed field values.\n     *\n     * Default value is `sum`.\n     */\n    computedFieldOperation: ComponentOptions.buildStringOption({ defaultValue: 'sum' }),\n\n    /**\n     * Specifies how to format the values resulting from a {@link Matrix.options.computedFieldOperation}.\n     *\n     * The Globalize library defines all available formats (see\n     * [Globalize](https://github.com/klaaspieter/jquery-global#globalizeformat-value-format-culture-)).\n     *\n     * The most commonly used formats are:\n     * - `c0` - Formats the value as a currency.\n     * - `n0` - Formats the value as an integer.\n     * - `n2` - Formats the value as a floating point with 2 decimal digits.\n     *\n     * Default value is `c0`.\n     */\n    computedFieldFormat: ComponentOptions.buildStringOption({ defaultValue: 'c0' }),\n\n    /**\n     * Specifies the font-size to use for displaying text inside the cells.\n     *\n     * This option is mainly useful to prevent a Matrix containing many columns from cropping some of its values.\n     *\n     * However, instead of using this option to solve this kind of issue, you could also remove some of the less\n     * important columns from your Matrix or modify the CSS of your page to allow the Matrix to occupy a larger space.\n     *\n     * Default value is `''`.\n     */\n    cellFontSize: ComponentOptions.buildStringOption({ defaultValue: '' }),\n\n    /**\n     * Specifies whether to show a preview popup of cell results when hovering over a cell.\n     *\n     * See also {@link Matrix.options.previewSortCriteria}, {@link Matrix.options.previewMaxWidth},\n     * {@link Matrix.options.previewMinWidth}, {@link Matrix.options.previewDelay} and\n     * {@link Matrix.options.previewTemplate}.\n     *\n     * Default value is `true`.\n     */\n    enableHoverPreview: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * If {@link Matrix.options.enableHoverPreview} is `true`, specifies the criteria to use for sorting the results of\n     * the hover preview.\n     *\n     * The available sort criteria values are the same as those of the {@link IQuery}.\n     *\n     * The possible values are:\n     * - `relevancy`: Uses all configured ranking weights and any specified ranking expressions to sort the results.\n     * - `dateascending` / `datedescending`: Sorts the results using the `@date` field value, which is typically the\n     * last modification date of an item in the index.\n     * - `qre`: Sorts the results using only the weights applied by ranking expressions. Using `qre` is much like using\n     * `relevancy`, except that `qre` does not compute automatic weights, such as weights based on keyword proximity.\n     * - `nosort`: Does not sort the results. Using `nosort` returns the items in an essentially random order.\n     * - `fieldascending` / `fielddescending`: Sorts the results using the value of a custom field.\n     * - `fieldascending` / `fielddescending`: Sorts the results using the value of a custom field.\n     *\n     * See also {@link Matrix.options.previewSortField}.\n     *\n     * Default value is `FieldDescending`.\n     */\n    previewSortCriteria: ComponentOptions.buildStringOption({ defaultValue: 'FieldDescending' }),\n\n    /**\n     * If {@link Matrix.options.previewSortCriteria} is `fieldascending` or `fielddescending`, specifies the field to\n     * use for sorting the results of the hover preview.\n     *\n     * Default value is the value of {@link Matrix.options.computedField}.\n     */\n    previewSortField: ComponentOptions.buildFieldOption(),\n\n    /**\n     * If {@link Matrix.options.enableHoverPreview} is `true`, specifies the maximum width (in pixels) of the preview\n     * popup.\n     *\n     * Default value is `500px`.\n     */\n    previewMaxWidth: ComponentOptions.buildStringOption({ defaultValue: '500px' }),\n\n    /**\n     * If {@link Matrix.options.enableHoverPreview} is `true`, specifies the minimum width (in pixels) of the preview\n     * popup.\n     *\n     * Default value is `0`.\n     */\n    previewMinWidth: ComponentOptions.buildStringOption({ defaultValue: '0' }),\n\n    /**\n     * If {@link Matrix.options.enableHoverPreview} is `true`, specifies the delay (in milliseconds) before sending the\n     * query to get the preview results.\n     *\n     * Default value is `500`.\n     */\n    previewDelay: ComponentOptions.buildNumberOption({ defaultValue: 500 }),\n\n    /**\n     * If {@link Matrix.options.enableHoverPreview} is `true`, specifies the template ID or CSS selector of the template\n     * to use to render the results of the hover preview.\n     *\n     * You must use either `data-template-id` or `data-template-selector` in the markup to specify a value for this\n     * option.\n     *\n     * **Examples:**\n     *\n     * Specifying what template to use by referring to its template ID:\n     * ```html\n     * <div class='CoveoMatrix' data-template-id='TemplateId'></div>\n     * ```\n     *\n     * Specifying what template to use by referring to its CSS selector:\n     * ```html\n     * <div class='CoveoMatrix' data-template-selector='.templateSelector'></div>\n     * ```\n     */\n    previewTemplate: ComponentOptions.buildTemplateOption()\n  };\n\n  /**\n   * Holds the data for the Matrix.\n   */\n  public data: Cell[][];\n  public groupByIndex = [];\n  public rowId = '';\n  public columnId = '';\n\n  /**\n   * The currently selected row value, or `undefined` if nothing is selected.\n   */\n  public selectedRowValue: string = undefined;\n\n  /**\n   * The currently selected column value, or `undefined` if nothing is selected.\n   */\n  public selectedColumnValue = undefined;\n\n  private numberOfRows = 0;\n  private numberOfColumns = 0;\n  private previewTimeout: number;\n\n  /**\n   * Creates a new Matrix. Also verifies whether options are valid and coherent. Binds query events.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the Matrix component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(public element: HTMLElement, public options?: IMatrixOptions, bindings?: IComponentBindings) {\n    super(element, Matrix.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, Matrix, options);\n\n    if (!this.options.previewTemplate) {\n      this.options.previewTemplate = new DefaultMatrixResultPreviewTemplate(<string>this.options.computedField, this.options.computedFieldFormat);\n    }\n\n    if (!this.options.previewSortField) {\n      this.options.previewSortField = <string>this.options.computedField;\n    }\n\n    if (this.options.columnFieldValues.length != this.options.columnLabels.length) {\n      this.options.columnLabels = this.options.columnFieldValues;\n    }\n\n    this.buildMatrix();\n    if (this.options.rowField == null) {\n      this.logger.error('\\'rowField\\' option is required in the Matrix component');\n    } else if (this.options.columnField == null) {\n      this.logger.error('\\'columnField\\' option is required in the Matrix component');\n    } else if (this.options.computedField == null) {\n      this.logger.error('\\'computedField\\' option is required in the Matrix component');\n    } else {\n      this.bindEvents();\n      this.initQueryState();\n    }\n  }\n\n  /**\n   * Selects a cell by its row and column number. Does not execute a query.\n   * @param rowNumber The row number of the cell to select.\n   * @param columnNumber The column number of the cell to select.\n   */\n  public selectCell(rowNumber: number, columnNumber: number): void {\n    let rowValue, columnValue;\n    if (rowNumber !== 0 && rowNumber !== this.numberOfRows - 1) {\n      rowValue = this.getRowValue(rowNumber);\n    }\n\n    if (columnNumber !== 0 && columnNumber !== this.numberOfColumns - 1) {\n      columnValue = this.getColumnValue(columnNumber);\n    }\n\n    if (rowValue && this.isRowFacetPresent()) {\n      this.queryStateModel.set(this.rowId, [rowValue]);\n    } else {\n      this.selectedRowValue = rowValue;\n      this.queryStateModel.set(this.rowId, []);\n    }\n\n    if (columnValue && this.isColumnFacetPresent()) {\n      this.queryStateModel.set(this.columnId, [columnValue]);\n    } else {\n      this.selectedColumnValue = columnValue;\n      this.queryStateModel.set(this.columnId, []);\n    }\n  }\n\n  /**\n   * Returns the currently selected column value.\n   */\n  public getSelectedColumnValue(): string {\n    return this.selectedColumnValue;\n  }\n\n  /**\n   * Returns the currently selected row value.\n   */\n  public getSelectedRowValue(): string {\n    return this.selectedRowValue;\n  }\n\n  /**\n   * Gets the HTMLElement associated to a cell.\n   * @param rowNumber The row number of the cell.\n   * @param columnNumber The column number of the cell.\n   * @returns {HTMLElement} The associated HTMLElement.\n   */\n  public getCellElement(rowNumber: number, columnNumber: number): HTMLElement {\n    return this.data[rowNumber][columnNumber].getHTML();\n  }\n\n  /**\n   * Gets the string associated to a cell.\n   * @param rowNumber The row number of the cell.\n   * @param columnNumber The column number of the cell.\n   * @returns {string} The associated string.\n   */\n  public getCellValue(rowNumber: number, columnNumber: number): string {\n    let cell = this.getCellElement(rowNumber, columnNumber);\n    return $$(cell).text();\n  }\n\n  public drawMatrix() {\n    let headerRow = $$('div', {\n      className: 'coveo-matrix-row matrix-header-row'\n    });\n    this.drawRow(headerRow.el, 0);\n    let numberOfRowsToDraw = this.options.enableColumnTotals ? this.numberOfRows - 1 : this.numberOfRows;\n    for (let i = 1; i < numberOfRowsToDraw; i++) {\n      let row = $$('div', {\n        className: 'coveo-matrix-row'\n      }).el;\n      this.drawRow(row, i);\n    }\n\n    if (this.options.enableColumnTotals) {\n      let totalRow = $$('div', {\n        className: 'coveo-matrix-row matrix-total-row'\n      }).el;\n\n      this.drawRow(totalRow, this.numberOfRows - 1);\n    }\n\n    if (this.options.cellFontSize !== '') {\n      let cells = $$(this.element).findAll('.coveo-matrix-cell');\n      _.each(cells, (c: HTMLElement) => {\n        c.style.fontSize = this.options.cellFontSize;\n      });\n    }\n  }\n\n  private bindEvents() {\n    this.bind.onRootElement(QueryEvents.buildingQuery, (args: IBuildingQueryEventArgs) => this.handleBuildingQuery(args));\n    this.bind.onRootElement(QueryEvents.doneBuildingQuery, (args: IDoneBuildingQueryEventArgs) => this.handleDoneBuildingQuery(args));\n    this.bind.onRootElement(QueryEvents.deferredQuerySuccess, (args: IQuerySuccessEventArgs) => this.handleDeferredQuerySuccess(args));\n  }\n\n  private initQueryState() {\n    this.rowId = QueryStateModel.getFacetId(<string>this.options.rowField);\n    this.columnId = QueryStateModel.getFacetId(<string>this.options.columnField);\n\n    this.queryStateModel.registerNewAttribute(this.rowId, []);\n    this.queryStateModel.registerNewAttribute(this.columnId, []);\n  }\n\n  private buildMatrix() {\n    this.buildTitle();\n    this.buildBody();\n    this.data = new Array<Array<Cell>>();\n    this.addHeaderRow();\n  }\n\n  private buildTitle() {\n    let title = this.options.title ? this.options.title : '';\n    let titleHtml = $$('div', {\n      className: 'coveo-matrix-title'\n    }, title).el;\n    this.element.appendChild(titleHtml);\n  }\n\n  private buildBody() {\n    let body = $$('div', {\n      className: 'coveo-matrix'\n    }).el;\n    this.element.appendChild(body);\n  }\n\n  private handleBuildingQuery(args: IBuildingQueryEventArgs) {\n    if (!this.areFacetsPresent()) {\n      if (this.selectedRowValue && !this.isRowFacetPresent()) {\n        args.queryBuilder.advancedExpression.addFieldExpression(<string>this.options.rowField, '=', [this.selectedRowValue]);\n      }\n      if (this.selectedColumnValue && !this.isColumnFacetPresent()) {\n        args.queryBuilder.advancedExpression.addFieldExpression(<string>this.options.columnField, '=', [this.selectedColumnValue]);\n      }\n    }\n  }\n\n  private handleDoneBuildingQuery(args: IDoneBuildingQueryEventArgs) {\n    this.groupByIndex = [];\n    this.addMainGroubByRequest(args.queryBuilder);\n    this.addColumnsGroupByRequests(args.queryBuilder);\n  }\n\n  private handleDeferredQuerySuccess(args: IQuerySuccessEventArgs) {\n    this.reset();\n    this.parseResults(args.results);\n    this.addTotals();\n    this.drawMatrix();\n    this.formatCells();\n    this.selectedRowValue = undefined;\n    this.selectedColumnValue = undefined;\n  }\n\n  private addMainGroubByRequest(queryBuilder: QueryBuilder) {\n    let groupBy: IGroupByRequest = {\n      field: <string>this.options.rowField,\n      sortCriteria: this.options.sortCriteria,\n      computedFields: this.getComputedFields(),\n      maximumNumberOfValues: this.options.maximumNumberOfRows\n    };\n\n    this.groupByIndex.push(queryBuilder.groupByRequests.length);\n    queryBuilder.groupByRequests.push(groupBy);\n  }\n\n  private addColumnsGroupByRequests(queryBuilder: QueryBuilder) {\n    for (let i = 0; i < this.options.columnFieldValues.length; i++) {\n      let groupBy = {\n        field: <string>this.options.rowField,\n        sortCriteria: this.options.sortCriteria,\n        computedFields: this.getComputedFields(),\n        queryOverride: '(' + this.buildExpression(queryBuilder) + ')' + '(' + this.options.columnField + '=\\'' + this.options.columnFieldValues[i] + '\\')',\n        maximumNumberOfValues: this.options.maximumNumberOfValuesInGroupBy\n      };\n\n      this.groupByIndex.push(queryBuilder.groupByRequests.length);\n      queryBuilder.groupByRequests.push(groupBy);\n    }\n  }\n\n  private buildExpression(queryBuilder: QueryBuilder) {\n    let expression = queryBuilder.expression.build();\n    let advancedExpression = queryBuilder.advancedExpression.build();\n    let constantExpression = queryBuilder.constantExpression.build();\n    let totalQuery = '';\n    if (expression) {\n      totalQuery += ' ' + expression;\n    }\n    if (advancedExpression) {\n      totalQuery += ' ' + advancedExpression;\n    }\n    if (constantExpression) {\n      totalQuery += ' ' + constantExpression;\n    }\n    return totalQuery;\n  }\n\n  private getComputedFields() {\n    let computedFields = [{\n      field: <string>this.options.computedField,\n      operation: this.options.computedFieldOperation\n    }];\n    return computedFields;\n  }\n\n  private getCellResult(results, rowNumber: number, columnNumber: number) {\n    let rowValue = this.getRowValue(rowNumber);\n    let columnValue = this.getColumnValue(columnNumber);\n    let cellResult = 0;\n\n    for (let i = 0; i < results.values.length; i++) {\n      if (results.values[i].value === rowValue) {\n        cellResult = results.values[i].computedFieldResults[0];\n        break;\n      }\n    }\n\n    if (this.isAColumnSelected() && !this.isColumnSelected(columnValue)) {\n      cellResult = 0;\n    }\n\n    return cellResult;\n  }\n\n  private addTotals() {\n    if (this.options.enableRowTotals) {\n      this.addRowTotals();\n    }\n    if (this.options.enableColumnTotals) {\n      this.addColumnTotals();\n    }\n  }\n\n  private addRowTotals() {\n    this.addColumn();\n    this.setValue('Total', 0, this.numberOfColumns - 1);\n    for (let i = 1; i < this.numberOfRows; i++) {\n      let rowTotal = this.computeRowTotal(i);\n      this.setValue(rowTotal, i, this.numberOfColumns - 1);\n    }\n\n    // Fix sort ordering when not all columns field values are present.\n    if (this.options.sortCriteria.toLowerCase() == 'computedfielddescending') {\n      this.data.sort((a: Cell[], b: Cell[]): number => {\n        return b[this.numberOfColumns - 1].getValue() - a[this.numberOfColumns - 1].getValue();\n      });\n    }\n\n    if (this.options.sortCriteria.toLowerCase() == 'computedfieldascending') {\n      this.data.sort((a: Cell[], b: Cell[]): number => {\n        return a[this.numberOfColumns - 1].getValue() - b[this.numberOfColumns - 1].getValue();\n      });\n    }\n  }\n\n  private addColumnTotals() {\n    this.addRow();\n    this.setValue('Total', this.numberOfRows - 1, 0);\n    for (let i = 1; i < this.numberOfColumns; i++) {\n      let columnTotal = this.computeColumnTotal(i);\n      this.setValue(columnTotal, this.numberOfRows - 1, i);\n    }\n  }\n\n  private computeRowTotal(rowNumber: number): number {\n    let total = 0;\n    for (let columnNumber = 1; columnNumber < this.numberOfColumns - 1; columnNumber++) {\n      total += parseInt(this.getCellValue(rowNumber, columnNumber));\n    }\n    return total;\n  }\n\n  private computeColumnTotal(columnNumber: number): number {\n    let total = 0;\n    for (let rowNumber = 1; rowNumber < this.numberOfRows - 1; rowNumber++) {\n      total += parseInt(this.getCellValue(rowNumber, columnNumber));\n    }\n    return total;\n  }\n\n  private formatCells() {\n    for (let i = 1; i < this.numberOfRows; i++) {\n      for (let j = 1; j < this.numberOfColumns; j++) {\n        let cellValue = this.getCellValue(i, j);\n        cellValue = Globalize.format(parseInt(cellValue), this.options.computedFieldFormat);\n        this.setValue(cellValue, i, j);\n      }\n    }\n  }\n\n  private addHeaderRow() {\n    this.addRow();\n    this.addColumn();\n    this.setValue(this.options.columnHeader, 0, 0);\n    for (let i = 0; i < this.options.columnLabels.length; i++) {\n      this.addColumn();\n      this.setValue(this.options.columnLabels[i], 0, i + 1);\n    }\n  }\n\n  private addRow() {\n    this.data.push(new Array<Cell>());\n\n    for (let i = 0; i < this.numberOfColumns; i++) {\n      this.addCellToRow(this.numberOfRows, i);\n    }\n    this.numberOfRows++;\n  }\n\n  private addColumn() {\n    for (let i = 0; i < this.numberOfRows; i++) {\n      this.addCellToRow(i, this.numberOfColumns);\n    }\n\n    this.numberOfColumns++;\n  }\n\n  private addCellToRow(rowNumber: number, columnNumber: number) {\n    let column = $$('div', {\n      className: 'coveo-matrix-cell'\n    });\n\n    if (columnNumber == 0) {\n      column.addClass('matrix-first-column');\n    }\n    this.data[rowNumber].push(new Cell(0, column.el));\n  }\n\n  private setValue(value: any, rowNumber: number, columnNumber: number) {\n    let cell = this.getCellElement(rowNumber, columnNumber);\n    if (!Utils.isNullOrUndefined(value)) {\n      $$(cell).text(value.toString());\n    }\n\n    if (this.isCellSelected(this.getRowValue(rowNumber), this.getColumnValue(columnNumber))) {\n      $$(cell).addClass('coveo-matrix-selected');\n    }\n\n    if (this.isAColumnSelected() && !this.isColumnSelected(this.getColumnValue(columnNumber))) {\n      if (columnNumber != 0 && rowNumber != 0) {\n        $$(cell).addClass('coveo-matrix-unimportant');\n      }\n    }\n\n    this.data[rowNumber][columnNumber].setValue(value);\n  }\n\n  private handleClick(rowNumber: number, columnNumber: number) {\n    this.selectCell(rowNumber, columnNumber);\n    this.queryController.executeQuery();\n  }\n\n  private getRowValue(rowNumber: number): string {\n    return this.data[rowNumber][0].getValue();\n  }\n\n  private getColumnValue(columnNumber: number): string {\n    return this.options.columnFieldValues[columnNumber - 1];\n  }\n\n  private isAColumnSelected(): boolean {\n    let selectedColumnValues = this.queryStateModel.get(this.columnId) || [];\n    return selectedColumnValues.length !== 0 || this.selectedColumnValue != undefined;\n  }\n\n  private isColumnSelected(columnValue: string): boolean {\n    if (this.isAColumnSelected() && columnValue) {\n      let selectedColumnValues = this.queryStateModel.attributes[this.columnId] || [];\n      for (let i = 0; i < selectedColumnValues.length; i++) {\n        if (selectedColumnValues[i].toLowerCase() === columnValue.toLowerCase()) {\n          return true;\n        }\n      }\n    }\n    return this.selectedColumnValue == columnValue;\n  }\n\n  private isARowSelected(): boolean {\n    let selectedRowValues = this.queryStateModel.get(this.rowId) || [];\n    return selectedRowValues.length !== 0 || this.selectedRowValue !== undefined;\n  }\n\n  private isRowSelected(rowValue: string): boolean {\n    if (this.isARowSelected() && rowValue) {\n      let selectedRowValues = this.queryStateModel.get(this.rowId) || [];\n      for (let i = 0; i < selectedRowValues.length; i++) {\n        if (selectedRowValues[i].toLowerCase() === rowValue.toLowerCase()) {\n          return true;\n        }\n      }\n    }\n    return this.selectedRowValue == rowValue;\n  }\n\n  private isCellSelected(rowValue: string, columnValue: string): boolean {\n    if (this.isAColumnSelected() && this.isARowSelected()) {\n      return this.isRowSelected(rowValue) && this.isColumnSelected(columnValue);\n    } else if (this.isAColumnSelected()) {\n      return this.isColumnSelected(columnValue);\n    }\n\n    return false;\n  }\n\n  private areFacetsPresent() {\n    return this.isRowFacetPresent() && this.isColumnFacetPresent();\n  }\n\n  private isRowFacetPresent() {\n    let facet = this.componentStateModel.get(this.rowId);\n    return facet && !facet[0].disabled;\n  }\n\n  private isColumnFacetPresent() {\n    let facet = this.componentStateModel.get(this.columnId);\n    return facet && !facet[0].disabled;\n  }\n\n  private reset() {\n    $$(this.element).empty();\n    this.numberOfRows = 0;\n    this.numberOfColumns = 0;\n    this.data = new Array<Array<Cell>>();\n\n    this.buildMatrix();\n  }\n\n  private parseResults(results: IQueryResults) {\n    if (results) {\n      let mainResults = results.groupByResults[this.groupByIndex[0]];\n      if (mainResults) {\n        for (let i = 0; i < mainResults.values.length; i++) {\n          let value = mainResults.values[i].value;\n          this.addRow();\n          this.setValue(value, i + 1, 0);\n        }\n      }\n\n      for (let i = 1; i < this.numberOfRows; i++) {\n        for (let j = 1; j < this.numberOfColumns; j++) {\n          let columnResult = results.groupByResults[this.groupByIndex[j]];\n          let cellValue = this.getCellResult(columnResult, i, j);\n          this.setValue(cellValue, i, j);\n        }\n      }\n    }\n\n  }\n\n  private drawRow(row: HTMLElement, rowNumber: number) {\n    let body = $$(this.element).find('.coveo-matrix');\n    for (let i = 0; i < this.numberOfColumns; i++) {\n      let cell = this.data[rowNumber][i].getHTML();\n      $$(cell).on('click', () => {\n        let handler = (num) => {\n          this.handleClick(rowNumber, num);\n        };\n        handler(i);\n      });\n\n      if (this.options.enableHoverPreview) {\n        ((num: number) => {\n          $$(cell).on('mouseover', () => this.handleHoverIn(rowNumber, num));\n          $$(cell).on('mouseout', () => this.handleHoverOut(rowNumber, num));\n        })(i);\n      }\n      row.appendChild(cell);\n    }\n    body.appendChild(row);\n  }\n\n  private handleHoverIn(rowNumber: number, columnNumber: number) {\n    if (this.isHoverWorkingOnRow(rowNumber) && this.isHoverWorkingOnColumn(columnNumber)) {\n      this.previewTimeout = setTimeout(() => {\n        this.displayResultsPreview(rowNumber, columnNumber);\n      }, this.options.previewDelay);\n    }\n  }\n\n  private handleHoverOut(rowNumber: number, columnNumber: number) {\n    clearTimeout(this.previewTimeout);\n    let cell = this.data[rowNumber][columnNumber];\n    cell.removePreview();\n  }\n\n  private displayResultsPreview(rowNumber: number, columnNumber: number) {\n    let query = this.createPreviewQuery(rowNumber, columnNumber);\n    let cell = this.data[rowNumber][columnNumber];\n    cell.addPreview(this.options.previewMinWidth, this.options.previewMaxWidth);\n\n    let endpoint = this.queryController.getEndpoint();\n    endpoint.search(query).then((data: IQueryResults) => {\n      // During the time it take for the query to return, the matrix can change size depending\n      // on if another query was performed : Need to check for undefined before accessing the data\n      // we're trying to render;\n      if (!this.isDataAvailable(rowNumber, columnNumber)) {\n        return;\n      }\n      let cell = this.data[rowNumber][columnNumber];\n      let instantiatedResults = _.map(data.results, (r: IQueryResult) => {\n        return this.instantiateTemplate(r);\n      });\n      let html = '';\n      _.each(instantiatedResults, (result) => {\n        result.then((builtResultElement: HTMLElement) => {\n          html += builtResultElement.outerHTML;\n        });\n      });\n      Promise.all(instantiatedResults).then(() => {\n        cell.updatePreview(html);\n      });\n    });\n  }\n\n  private instantiateTemplate(result: IQueryResult): Promise<HTMLElement> {\n    return this.options.previewTemplate.instantiateToElement(result, {\n      checkCondition: false,\n      responsiveComponents: this.searchInterface.responsiveComponents\n    }).then((content: HTMLElement) => {\n      let initParameters: IInitializationParameters = {\n        options: this.options,\n        bindings: this.getBindings(),\n        result: result\n      };\n\n      return Initialization.automaticallyCreateComponentsInside(content, initParameters).initResult.then(() => {\n        return content;\n      });\n    });\n  }\n\n  private createPreviewQuery(rowNumber: number, columnNumber: number): IQuery {\n    let rowFieldExpression = '(' + QueryUtils.buildFieldExpression(<string>this.options.rowField, '=', [this.getRowValue(rowNumber)]) + ')';\n    let columnFieldExpression = '(' + QueryUtils.buildFieldExpression(<string>this.options.columnField, '=', [this.getColumnValue(columnNumber)]) + ')';\n    let query = this.queryController.getLastQuery();\n    query.aq = rowFieldExpression;\n    query.aq += columnFieldExpression;\n    query.sortCriteria = this.options.previewSortCriteria;\n    query.sortField = <string>this.options.previewSortField;\n    let fieldSliced = this.options.computedField.slice(1);\n    let fieldExists = _.find(query.fieldsToInclude, (field: string) => {\n      return field == fieldSliced;\n    });\n    if (!fieldExists && query.fieldsToInclude) {\n      query.fieldsToInclude.push(fieldSliced);\n    }\n    return query;\n  }\n\n  private isHoverWorkingOnRow(rowNumber: number) {\n    if (this.options.enableColumnTotals) {\n      return rowNumber !== 0 && rowNumber !== this.numberOfRows - 1;\n    }\n    return rowNumber !== 0;\n  }\n\n  private isHoverWorkingOnColumn(columnNumber: number) {\n    if (this.options.enableRowTotals) {\n      return columnNumber !== 0 && columnNumber !== this.numberOfColumns - 1;\n    }\n    return columnNumber !== 0;\n  }\n\n  private isDataAvailable(row: number, column: number) {\n    return this.data[row] !== undefined && this.data[row][column] !== undefined;\n  }\n\n}\n\nInitialization.registerAutoCreateComponent(Matrix);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Matrix/Matrix.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_Matrix.scss\n// module id = 595\n// module chunks = 21 70","import { $$ } from '../../utils/Dom';\nimport * as _ from 'underscore';\n\n/**\n * Represent a single cell of data in the {@link Matrix} component.\n */\nexport class Cell {\n  private value: any;\n  private element: HTMLElement;\n  private previewActive = false;\n\n  constructor(value: any = 0, el?: HTMLElement) {\n    this.element = el;\n    this.value = value;\n  }\n\n  /**\n   * Return the value of the cell.\n   * @returns {any}\n   */\n  public getValue(): any {\n    return this.value;\n  }\n\n  /**\n   * Return the `HTMLElement` for the cell.\n   * @returns {HTMLElement}\n   */\n  public getHTML(): HTMLElement {\n    return this.element;\n  }\n\n  /**\n   * Set the value if the cell.\n   * @param value\n   */\n  public setValue(value: any) {\n    this.value = value;\n  }\n\n  /**\n   * Set the `HTMLElement` for the cell.\n   * @param html\n   */\n  public setHTML(html: HTMLElement) {\n    this.element = html;\n  }\n\n  /**\n   * Show the preview of the cell.\n   * @param minWidth css minWidth property : eg 100px\n   * @param maxWidth css maxWidth property : eg 100px\n   */\n  public addPreview(minWidth: string, maxWidth: string) {\n    this.previewActive = true;\n    let previewContainer = $$('div', {\n      className: 'matrix-results-preview-container'\n    });\n    previewContainer.el.style.minWidth = minWidth;\n    previewContainer.el.style.maxWidth = maxWidth;\n    previewContainer.on('click', (e: MouseEvent) => {\n      e.stopPropagation();\n    });\n    this.element.appendChild(previewContainer.el);\n    let container = $$(this.element).findAll('.matrix-results-preview-container');\n    _.each(container, (c: HTMLElement) => {\n      $$(c).hide();\n    });\n  }\n\n  /**\n   * Remove the preview of the cell\n   */\n  public removePreview() {\n    this.previewActive = false;\n    let container = $$(this.element).find('.matrix-results-preview-container');\n    if (container) {\n      $$(container).detach();\n    }\n  }\n\n  /**\n   * Update the preview with a new template\n   * @param template\n   */\n  public updatePreview(template: string) {\n    if (this.previewActive) {\n      let preview = $$(this.element).find('.matrix-results-preview-container');\n      preview.innerHTML += template;\n      $$(preview).show();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Matrix/Cell.ts","import { Template, IInstantiateTemplateOptions } from '../Templates/Template';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { $$ } from '../../utils/Dom';\nimport * as Globalize from 'globalize';\n\nexport class DefaultMatrixResultPreviewTemplate extends Template {\n\n  constructor(private computedField: string, private format: string) {\n    super();\n  }\n\n  instantiateToString(object?: IQueryResult, instantiateOptions?: IInstantiateTemplateOptions): string {\n    var preview = '<div class=\\'coveo-result-frame\\'>' +\n      '<div class=\\'coveo-result-row\\'>' +\n      '<div class=\\'coveo-result-cell\\' style=\\'width: 40px; padding-right:5px;vertical-align: middle\\'>' +\n      '<a class=\\'CoveoIcon\\' data-small=\\'true\\'></a>' +\n      '</div>' +\n      '<div class=\\'coveo-result-cell\\' style=\\'font-size:13px;vertical-align: middle\\'>' +\n      '<a class=\\'CoveoResultLink\\'></a>' +\n      '</div>' +\n      '<div class=\\'coveo-result-cell\\' style=\\'width:80px; text-align:right; font-size:13px; padding-right: 5px;vertical-align: middle\\'>' +\n      Globalize.format(parseInt(object.raw[this.computedField.slice(1)]), this.format) +\n      '</div>' +\n      '</div>' +\n      '</div>';\n    return preview;\n  }\n\n  instantiateToElement(object?: IQueryResult, instantiateOptions?: IInstantiateTemplateOptions): Promise<HTMLElement> {\n    return new Promise((resolve, reject) => {\n      return $$('div', undefined, this.instantiateToString(object)).el;\n    });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Matrix/DefaultMatrixResultPreviewTemplate.ts"],"sourceRoot":""}