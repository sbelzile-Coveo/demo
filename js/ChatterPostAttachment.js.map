{"version":3,"sources":["webpack:///./src/utils/ChatterUtils.ts?31c1","./src/ui/ChatterPostAttachment/ChatterPostAttachment.ts"],"names":[],"mappings":";;;;;;;;AAAA;IAAA;IAQA,CAAC;IAPQ,qBAAQ,GAAf,UAAgB,SAAiB,EAAE,QAAgB,EAAE,WAAmB;QACtE,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IAClD,CAAC;IAEM,oCAAuB,GAA9B,UAA+B,OAAoB,EAAE,gBAAyB,EAAE,YAAqB;QACnG,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IACH,mBAAC;AAAD,CAAC;AARY,oCAAY;;;;;;;;;;;;;;;;;;;;;ACAzB,yCAA8C;AAG9C,qCAA0C;AAC1C,8CAAwD;AACxD,wCAA0C;AAC1C,8CAAwD;AACxD,mCAAqC;AACrC,6CAAqD;AAKrD;IAA2C,yCAAS;IASlD,+BAAmB,OAAoB,EAAS,OAAsC,EAAS,QAAoC,EAAS,MAAqB;QAAjK,YACE,kBAAM,OAAO,EAAE,qBAAqB,CAAC,EAAE,EAAE,QAAQ,CAAC,SAwBnD;QAzBkB,aAAO,GAAP,OAAO,CAAa;QAAS,aAAO,GAAP,OAAO,CAA+B;QAAS,cAAQ,GAAR,QAAQ,CAA4B;QAAS,YAAM,GAAN,MAAM,CAAe;QAG/J,EAAE,CAAC,CAAC,CAAC,aAAK,CAAC,iBAAiB,CAAC,aAAK,CAAC,aAAa,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAChF,IAAI,WAAW,GAAG,QAAE,CAAC,KAAK,EAAE;gBAC1B,SAAS,EAAE,8BAA8B;aAC1C,CAAC,CAAC;YACH,QAAE,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAEnC,IAAI,IAAI,GAAG,QAAE,CAAC,KAAK,EAAE;gBACnB,SAAS,EAAE,2DAA2D;aACvE,CAAC,CAAC;YACH,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAE5B,IAAI,WAAW,GAAG,QAAE,CAAC,GAAG,EAAE;gBACxB,IAAI,EAAE,2BAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,aAAK,CAAC,aAAa,CAAC,MAAM,EAAE,cAAc,CAAC,EAAE,aAAK,CAAC,aAAa,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;aAC7I,CAAC,CAAC;YACH,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAEnC,EAAE,CAAC,CAAC,CAAC,aAAK,CAAC,iBAAiB,CAAC,aAAK,CAAC,aAAa,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/E,WAAW,CAAC,IAAI,CAAC,aAAK,CAAC,aAAa,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,CAAC;YACrE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,WAAW,CAAC,IAAI,CAAC,WAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACxC,CAAC;QACH,CAAC;;IACH,CAAC;IACH,4BAAC;AAAD,CAAC,CAnC0C,qBAAS;AAC3C,wBAAE,GAAG,uBAAuB,CAAC;AAE7B,8BAAQ,GAAG;IAChB,8BAAc,CAAC;QACb,uBAAuB,EAAE,qBAAqB;KAC/C,CAAC,CAAC;AACL,CAAC;AAPU,sDAAqB;AAqClC,+BAAc,CAAC,2BAA2B,CAAC,qBAAqB,CAAC,CAAC","file":"ChatterPostAttachment.js","sourcesContent":["export class ChatterUtils {\n  static buildURI(objectURI: string, objectId: string, newObjectId: string) {\n    return objectURI.replace(objectId, newObjectId);\n  }\n\n  static bindClickEventToElement(element: HTMLElement, openInPrimaryTab: boolean, openInSubTab: boolean) {\n    return element;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/ChatterUtils.ts","import { Component } from '../Base/Component';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Utils } from '../../utils/Utils';\nimport { ChatterUtils } from '../../utils/ChatterUtils';\nimport { l } from '../../strings/Strings';\nimport { Initialization } from '../Base/Initialization';\nimport { $$ } from '../../utils/Dom';\nimport { exportGlobally } from '../../GlobalExports';\n\nexport interface IChatterPostAttachmentOption {\n}\n\nexport class ChatterPostAttachment extends Component {\n  static ID = 'ChatterPostAttachment';\n\n  static doExport = () => {\n    exportGlobally({\n      'ChatterPostAttachment': ChatterPostAttachment\n    });\n  }\n\n  constructor(public element: HTMLElement, public options?: IChatterPostAttachmentOption, public bindings?: IResultsComponentBindings, public result?: IQueryResult) {\n    super(element, ChatterPostAttachment.ID, bindings);\n\n    if (!Utils.isNullOrUndefined(Utils.getFieldValue(result, 'sfcontentversionid'))) {\n      let rootElement = $$('div', {\n        className: 'coveo-chatter-result-box-row'\n      });\n      $$(element).append(rootElement.el);\n\n      let icon = $$('div', {\n        className: 'coveo-sprites-common-system coveo-chatter-result-box-icon'\n      });\n      rootElement.append(icon.el);\n\n      let linkElement = $$('a', {\n        href: ChatterUtils.buildURI(result.clickUri, Utils.getFieldValue(result, 'sffeeditemid'), Utils.getFieldValue(result, 'sfcontentversionid'))\n      });\n      rootElement.append(linkElement.el);\n\n      if (!Utils.isNullOrUndefined(Utils.getFieldValue(result, 'sfcontentfilename'))) {\n        linkElement.text(Utils.getFieldValue(result, 'sfcontentfilename'));\n      } else {\n        linkElement.text(l('ShowAttachment'));\n      }\n    }\n  }\n}\n\nInitialization.registerAutoCreateComponent(ChatterPostAttachment);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ChatterPostAttachment/ChatterPostAttachment.ts"],"sourceRoot":""}